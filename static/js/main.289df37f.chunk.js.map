{"version":3,"sources":["Drawer.js","App.js","serviceWorker.js","index.js"],"names":["Drawer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePickerDisplay","inside","setState","displayInsidePicker","state","displayOutsidePicker","_this2","_this$props","width","columns","rows","insideColor","outsideColor","handleColorChange","handleChange","exportToPdf","react_default","a","createElement","className","style","type","value","onChange","position","background","onClick","lib","color","onChangeComplete","Component","App","doc","jsPDF","exportDraw","imgData","document","getElementById","toDataURL","addImage","save","name","event","target","defineProperty","hex","displayedScale","window","innerHeight","height","margin","scale","draw","_this$state","c","side","i","ctx","getContext","clearRect","widthOffset","heightOffset","lineWidth","beginPath","strokeStyle","moveTo","lineTo","stroke","_this$state2","_this$state3","src_Drawer","marginLeft","id","opacity","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.289df37f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { ChromePicker } from 'react-color';\n\n\nclass Drawer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayInsidePicker: false,\n      displayOutsidePicker: false,\n    }\n  }\n\n  handlePickerDisplay = inside => {\n    this.setState({\n      displayInsidePicker: inside ? !this.state.displayInsidePicker : false,\n      displayOutsidePicker: !inside ? !this.state.displayOutsidePicker : false\n    })\n  }\n  \n  render() {\n    const { width, columns, rows, insideColor, outsideColor, handleColorChange, handleChange, exportToPdf } = this.props;\n    return (\n      <div className=\"drawer-container\" style={{width}}>\n        <h1 className=\"drawer-title\">Générateur de grilles</h1>\n        <div>\n          <div className=\"input-container\">\n            <div className=\"input-column\">\n              <label className=\"label\">Colonnes</label>\n              <input className=\"input\" type=\"number\" value={columns} onChange={handleChange('columns')}/>\n            </div>\n            <div className=\"input-column\">\n              <label className=\"label\">Lignes</label>\n              <input className=\"input\" type=\"number\" value={rows} onChange={handleChange('rows')}/>\n            </div>\n          </div>\n          <div className=\"divider\"/>\n          <div className=\"color-container\">\n            <div className=\"color-row\">\n              <div style={{position: \"relative\"}}>\n                <div className=\"color-square\" style={{ background: outsideColor }} onClick={() => this.handlePickerDisplay()}/>\n                <ChromePicker\n                  className={\"color-picker\" + (this.state.displayOutsidePicker ? \"\" : \" hidden\")}\n                  color={outsideColor}\n                  onChangeComplete={handleColorChange(\"outsideColor\")}\n                />           \n              </div>\n              <label className=\"label\">Couleur extérieure</label>\n            </div>\n            <div className=\"color-row\">\n              <div style={{ position: \"relative\" }}>\n                <div className=\"color-square\" style={{background: insideColor}} onClick={() => this.handlePickerDisplay(true)}/>\n                <ChromePicker\n                  className={\"color-picker\" + (this.state.displayInsidePicker ? \"\" : \" hidden\")}\n                  color={insideColor}\n                  onChangeComplete={handleColorChange(\"insideColor\")}\n                />           \n              </div>\n              <label className=\"label\">Couleur intérieure</label>\n            </div>\n          </div>\n        </div>\n        <button onClick={exportToPdf} className=\"button\">Exporter en pdf</button>\n      </div>\n    );\n  }\n}\n\nexport default Drawer;\n","import React, {Component} from 'react';\nimport Drawer from './Drawer';\nimport './App.css';\nimport jsPDF from 'jspdf';\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.displayedScale = (window.innerHeight - 40)/297;\n    this.state = {\n      columns: 15,\n      rows: 20,\n      width: 210 * this.displayedScale,\n      height: 297 * this.displayedScale,\n      margin: 15 * this.displayedScale,\n      insideColor: \"#000\",\n      outsideColor: \"#000\"\n    }\n    this.scale = 10;\n    this.margin = 15 * this.scale;\n    this.width = 210 * this.scale;\n    this.height = 297 * this.scale;\n  }\n\n  componentDidMount() {\n    this.draw();\n  }\n\n  draw() {\n    const { rows, columns, margin, width, height, outsideColor, insideColor } = this.state;\n    const c = document.getElementById(\"displayCanvas\");\n    if(c){\n      const ctx = c.getContext(\"2d\");\n      ctx.clearRect(0, 0, c.width, c.height);\n      \n      let side, i;\n      if(width/height < columns/rows) {\n        side = (width - 2 * margin) / columns;\n      } else {\n        side = (height - 2 * margin) / rows;\n      }\n\n      const widthOffset = width/2 - (columns * side)/2;\n      const heightOffset = height/2 - (rows * side)/2;\n      \n      ctx.lineWidth = 2;\n      \n      ctx.beginPath();\n      ctx.strokeStyle = outsideColor;\n      ctx.moveTo(widthOffset, heightOffset);\n      ctx.lineTo(widthOffset, rows * side + heightOffset);\n      ctx.lineTo(columns * side + widthOffset, rows * side + heightOffset);\n      ctx.lineTo(columns * side + widthOffset, heightOffset);\n      ctx.lineTo(widthOffset, heightOffset);\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.strokeStyle = insideColor;\n\n      for(i = 1; i < columns; i++){\n        ctx.moveTo(i*side + widthOffset, 0 + heightOffset);\n        ctx.lineTo(i*side + widthOffset, rows * side + heightOffset);\n      }\n  \n      for(i = 1; i < rows; i++){\n        ctx.moveTo(0 + widthOffset, i * side + heightOffset);\n        ctx.lineTo(columns * side + widthOffset, i * side + heightOffset);\n      }\n      ctx.stroke();\n    }\n  }\n\n  exportDraw() {\n    const { rows, columns, outsideColor, insideColor } = this.state;\n    const c = document.getElementById(\"exportCanvas\");\n    const ctx = c.getContext(\"2d\");\n    ctx.clearRect(0, 0, c.width, c.height);\n    let side, i;\n    if(this.width/this.height < columns/rows) {\n      side = (this.width - 2 * this.margin) / columns;\n    } else {\n      side = (this.height - 2 * this.margin) / rows;\n    }\n    const widthOffset = this.width/2 - (columns * side)/2;\n    const heightOffset = this.height/2 - (rows * side)/2;\n    \n    ctx.lineWidth = 4;\n    ctx.beginPath();\n    ctx.strokeStyle = outsideColor;\n    ctx.moveTo(widthOffset, heightOffset);\n    ctx.lineTo(widthOffset, rows * side + heightOffset);\n    ctx.lineTo(columns * side + widthOffset, rows * side + heightOffset);\n    ctx.lineTo(columns * side + widthOffset, heightOffset);\n    ctx.lineTo(widthOffset, heightOffset);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.strokeStyle = insideColor;\n\n    for(i = 1; i < columns; i++){\n      ctx.moveTo(i*side + widthOffset, 0 + heightOffset);\n      ctx.lineTo(i*side + widthOffset, rows * side + heightOffset);\n    }\n\n    for(i = 1; i < rows; i++){\n      ctx.moveTo(0 + widthOffset, i * side + heightOffset);\n      ctx.lineTo(columns * side + widthOffset, i * side + heightOffset);\n    }\n    ctx.stroke();\n  }\n\n  exportToPdf = () => {\n    const doc = new jsPDF();\n \n    this.exportDraw();\n    const canvas = document.getElementById(\"exportCanvas\");\n    const imgData = canvas.toDataURL('image/png');\n  // Generate PDF\n    doc.addImage(imgData, 'PNG', 0, 0, 210, 297);\n    // doc.text('Hello world!', 10, 10)\n    doc.save('grille_a4.pdf')\n  }\n\n  handleChange = name => event => {\n    if(event.target.value > 100){\n      this.setState({[name]: 100});\n    } else if (event.target.value < 1) {\n      this.setState({[name]: 1});\n    } else {\n      this.setState({[name]: event.target.value});\n    }\n  }\n\n  handleColorChange = name => color => {\n    this.setState({ [name]: color.hex });\n  };\n  \n  render() {\n    const drawerWidth = 300;\n    const { columns, rows, insideColor, outsideColor } = this.state;\n\n    this.draw();\n\n    return (\n      <div className=\"app\">\n        <Drawer \n          width={drawerWidth}\n          columns={columns}\n          rows={rows}\n          insideColor={insideColor}\n          outsideColor={outsideColor}\n          handleColorChange={this.handleColorChange}\n          handleChange={this.handleChange}\n          exportToPdf={this.exportToPdf}\n        />\n        <div style={{marginLeft: drawerWidth}}>\n          <canvas id=\"displayCanvas\" className=\"canvas displayed-canvas\" width={210 * this.displayedScale} height={297 * this.displayedScale}></canvas>\n          <canvas id=\"exportCanvas\" className=\"canvas\" width={210 * this.scale} height={297 * this.scale} style={{position: 'absolute', opacity: 0}}></canvas>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}